#!/usr/bin/env ruby

require 'erb'
require 'yaml'
require 'ostruct'

class Derb
  VERSION = '0.1.1'

  def initialize(template_file = nil, data_file = nil)
    template_file = template_file || 'Dockerfile.erb'
    data_file     = data_file     || 'Dockerfile.yml'

    unless File.exists? template_file
      raise ArgumentError, "#{template_file} not found"
    end

    @template = File.read template_file
    if File.exists? data_file
      @data = YAML.load_file data_file if data_file
    end
  end

  def render
    ERB.new(@template).result(
      OpenStruct.new(@data).instance_eval { binding }
    )
  end

  def render_to_file(output_filename = nil)
    output_filename = output_filename || 'Dockerfile'

    if File.exists? output_filename
      raise "#{output_filename} does already exist, aborting"
    else
      File.open(output_filename, 'w+'){ |f|
        f.write(render)
      }
      puts "Created #{output_filename}"
    end
  end
end

begin
  Derb.new(ARGV[0], ARGV[1]).render_to_file(ARGV[2])
rescue => e
  $stderr.puts e.message
  exit 1
end
